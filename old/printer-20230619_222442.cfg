[include mainsail.cfg]
[include uart.cfg]                      ; stepper motor config
[include menu.cfg]
[include macros.cfg]
[include lcd_tweaks.cfg]
[include test_speed.cfg]
[include timelapse.cfg]
[include btt-ebb-canbus-v1.2.cfg]       ; BigTreeTech EBB CANBus Board MCU import
[include bedfans.cfg]
[include sb_leds.cfg]                   ; Andrew Ellis version of the SB LEDS control - much simpler
[include temperature_color.cfg]         ; Maple Leaf Makers code for temperature dependent colour changes of an LED
[include Adaptive_Purge.cfg]
[include Adaptive_Mesh.cfg]             ; GitHub kyleisah - Klipper Adpative Meshing Purging
[include fan_tach_monitor.cfg]          ; Macro to monitor for hotend fan failure - requires changes to the EBBCan config
[include config_backup.cfg]               ; Auto commit to GitHub
#[include non-canbus.cfg]               ; include file for all the settings being transferred to the CANBus board
#[include klicky-probe.cfg]              ; imports all the klicky probe related files in one go 

## Allows the chamber temperature sensor to be used for the chamber temp, the chamber heater and the exhaust fan
[duplicate_pin_override]
pins: EBBCan: PA3, PA8

## Andrew Ellis' temperature model for the thermistor - XXX
[thermistor 100k3950_airtemp]
temperature1: 20
resistance1: 125245
temperature2: 50
resistance2: 35900
temperature3: 80
resistance3: 12933

[mcu]
canbus_uuid: c4881dcf2900

##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
#serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_430011000650535556323420-if00
#serial: usb-CanBoot_stm32f446xx_430011000650535556323420-if00 - when in the CanBoot state
#restart_method: command
##--------------------------------------------------------------------

#ADXL chip on the BTT EBB CANBus Board - defined in the included file above
[resonance_tester]
accel_chip: adxl345
probe_points:
    175, 175, 10

[printer]
kinematics: corexy
max_velocity: 500  
max_accel: 5000             #Determined by resonance testing
max_accel_to_decel: 5000
#   A pseudo acceleration (in mm/s^2) controlling how fast the
#   toolhead may go from acceleration to deceleration. It is used to
#   reduce the top speed of short zig-zag moves (and thus reduce
#   printer vibration from these moves). The default is half of
#   max_accel.
max_z_velocity: 30          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 8.0

# enables support for excluding objects during prints
[exclude_object]
[pause_resume]
[display_status]
[respond]

[virtual_sdcard]
path: ~/printer_data/gcodes
on_error_gcode:
  PAUSE

[idle_timeout]
gcode:
    {% if "xyz" in printer.toolhead.homed_axes %}
        G91                                                                                                 ; relative positioning
        G1 Z5 F18000.0                                                                                      ; move up 5mm
        # DOCK_PROBE                                                                                          ; dock klicky
        G90                                                                                                 ; absolute positioning
        G1 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F18000.0                   ; park nozzle at rear
    {% endif %}
    OFF                                                                                                     ; turn everything off                                                                                     ; set logo back to white
    timeout: 7200 # 2 hrs

[probe]
# Voron Tap
pin: EBBCan:PB5
x_offset: 0
y_offset: 0         # Previous for klicky - 19.75
#z_offset: -0.775    # higher value (more positive) = more squish
speed: 4
lift_speed: 15
samples: 3
samples_result: median
sample_retract_dist: 1.25
samples_tolerance: 0.1
samples_tolerance_retries: 3

activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
		M106 S205 									; turn on part fan (80%)
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            	M106 S205 							; turn on part fan (80%)
                TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}
    M106 S0                                        ; turn off part fan


#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR_0
##  Endstop connected to DIAG_0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: EBBCan:PB6
position_min: 10
position_endstop: 350
position_max: 350
homing_speed: 80   #Max 100
second_homing_speed: 25
homing_retract_dist: 5
homing_positive_dir: true

##  A Stepper - Right
##  Connected to MOTOR_1
##  Endstop connected to DIAG_1
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: PG6
position_min: 0
position_endstop: 350
position_max: 350
homing_speed: 80  #Max 100
second_homing_speed: 25
homing_retract_dist: 5
homing_positive_dir: true

 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to MOTOR_2
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16
endstop_pin: probe:z_virtual_endstop       # PG10
position_max: 300
position_min: -5
homing_speed: 15
second_homing_speed: 4
homing_retract_dist: 0.35

##  Z1 Stepper - Rear Left
##  Connected to MOTOR_3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##  Z2 Stepper - Rear Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##  Z3 Stepper - Front Right
##  Connected to MOTOR_5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

## Stepper_Fake to fool the controller.py routine so the chamber heater fan doesn't turn on all the time
[manual_stepper stepper_fake]
step_pin: PE2
dir_pin: PE3
enable_pin: !PD4
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

#####################################################################
#   Extruder
#####################################################################

; in non-canbus.cfg or the canbus config file

#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
heater_pin: PA3
sensor_type: Generic 3950     ##NTC 100K MGB18-104F39050L32    ### Might be right? XXX
sensor_pin: PF3
max_power: 0.65
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

[verify_heater heater_bed]
max_error: 120
check_gain_time: 90
hysteresis: 5
heating_gain: 2

[verify_heater extruder]
max_error: 120
check_gain_time: 20
hysteresis: 5
heating_gain: 2

#####################################################################
#   Chamber Heater
#####################################################################

[heater_generic chamber_heater]
gcode_id: CHE
#   The id to use when reporting the temperature in the M105 command.
#   This parameter must be provided.
heater_pin: PB11
max_power: 1.0
sensor_type: 100k3950_airtemp
sensor_pin: EBBCan:PA3
#smooth_time: defaults to 1 sec
control: watermark
max_delta: 0.5
min_temp: 0
max_temp: 70

[verify_heater chamber_heater]
max_error: 120
check_gain_time: 120
hysteresis: 5
heating_gain: 1


#####################################################################
#   Fan Control
#####################################################################

# FAN0=PA8 - bed fans - joined
# FAN1=PE5 - 5V PSU + Main PSU - joined
# FAN2=PD12 - Raspberry Pi
# FAN3=PD13 - BTT Octopus
# FAN4=PD14 - Exhaust
# FAN5=PD15 - Chamber Heater

## Chamber heater fan - comes on whenever the chamber heater is active
# First define the multi_pin required to link the fan on the heater with the bed fans nearby
[multi_pin chamber_heater_fan_pins]
pins: PD15, PA8

# BTT Octopus cooling fan
[temperature_fan Octopus_fan]
pin: PD13
max_power: 1.0
kick_start_time: 0.5
shutdown_speed: 0.0
sensor_type: temperature_mcu
sensor_mcu: mcu
target_temp: 35
min_temp: 0
max_temp: 90
max_speed: 0.8
min_speed: 0.2
control: watermark
max_delta: 2.0

## PSU cooling fan
[controller_fan PSU_fan]
pin: PE5
kick_start_time: 0.5
fan_speed: 0.5
idle_timeout: 30
idle_speed: 0.2
heater: extruder
stepper: stepper_x, stepper_y, stepper_z

## Raspberry Pi cooling fan
[temperature_fan Raspberry_Pi_fan]
pin: PD12
max_power: 1.0
kick_start_time: 0.5
shutdown_speed: 0.0
sensor_type: temperature_host
sensor_path: /sys/class/thermal/thermal_zone0/temp
target_temp: 35
min_temp: 0
max_temp: 90
max_speed: 0.8
min_speed: 0.2
control: watermark
max_delta: 2.0

## Chamber temperature control fan - repurpose the exhaust fan
[temperature_fan Exhaust]
pin: PD14
max_power: 1.0
kick_start_time: 0.5
shutdown_speed: 0.0
sensor_type: 100k3950_airtemp
sensor_pin: EBBCan:PA3
target_temp: 35
min_temp: 0
max_temp: 80
max_speed: 1.0
min_speed: 0.2
control: watermark
max_delta: 1.0

[controller_fan ChamberHeater_fan]
pin: multi_pin: chamber_heater_fan_pins
max_power: 1.0
off_below: 1
shutdown_speed: 0
kick_start_time: 0.5
idle_timeout: 60 # amount of time the fan runs after the heater is turned off
idle_speed: 0.5
heater: chamber_heater
stepper: manual_stepper stepper_fake

## Two Zero Filter fans under the bed, linked electrically
# in the bedfans.cfg file

#####################################################################
#   Thermistors
#####################################################################

# Bed rear underside
[temperature_sensor Bed_Rear_Bottom]
sensor_type: 100k3950_airtemp
sensor_pin: PF5
#min_temp:
#max_temp:
gcode_id: bedr

#####################################################################
#   LED Control
#####################################################################

## Chamber Lighting - HE2 Connector (Optional)
[output_pin caselight]
pin: PB10
pwm:true
shutdown_value: 0
value:0.67
cycle_time: 0.01

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
gcode:
	{% if "xyz" in printer.toolhead.homed_axes %}
		G91                          	 																	; relative positioning
		G1 Z5 F18000.0                      																; move up 5mm
		G90                                 																; absolute positioning
		G1 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F18000.0  					; park nozzle at rear
	{% endif %}
	OFF																									; turn everything off
timeout: 7200 # 2 hrs

#[safe_z_home]    
# Replaced with Voron Tap
##  XY Location of the Z Endstop Switch
##  Update -10,-10 to the XY coordinates of your endstop pin 
##  (such as 157,305) after going through Z Endstop Pin
##  Location Definition step.
#home_xy_position:175,175       # Centre of the bed
#speed:450
#z_hop:10

[homing_override]
axes: z
set_position_z: 0
gcode:
  G90
  G0 Z10 F600
  {% if not 'xy' in printer.toolhead.homed_axes %}
        G28 X Y
  {% endif %}

  # Generate random offsets to move the central probe point around and avoid marking one spot with the nozzle
  {% set offsetX = [0,1,2,3,4,5]|random %}
  {% set offsetY = [0,1,2,3,4,5]|random %}

  G0 X{170 + (offsetX * 2)} Y{170 + (offsetY * 2)}  F18000
  G28 Z
  G0 Z10 F1800

[quad_gantry_level]
gantry_corners:
   -50,-10
   386,420
##  Probe points
points:
   30,30
   30,320
   320,320
   320,30
speed: 500
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.015
max_adjust: 10

[z_thermal_adjust]
temp_coeff: 0.0118
smooth_time: 2
#z_adjust_off_above:
#   Disables adjustments above this Z height [mm]. The last computed correction
#   will remain applied until the toolhead moves below the specified Z height
#   again. The default is 99999999.0 mm (always on).
#max_z_adjustment:
#   Maximum absolute adjustment that can be applied to the Z axis [mm]. The
#   default is 99999999.0 mm (unlimited).
sensor_type: 100k3950_airtemp
sensor_pin: PF4
min_temp: 0
max_temp: 65
gcode_id: frame

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
#   Displays and Bed Mesh
#####################################################################

[display]
##  mini12864 LCD Display
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 63
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2
display_group: __voron_display
menu_timeout: 60

[output_pin beeper]
pin: EXP1_1
pwm: True
value: 0
shutdown_value: 0
cycle_time: 0.0005

[neopixel lcd]
##  To control Neopixel RGB in mini12864 display
pin: EXP1_6
chain_count: 3
initial_RED: 0.0
initial_GREEN: 1.0
initial_BLUE: 0.0
color_order: RGB

##  Set RGB values on boot up for each Neopixel. 
##  Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
        SET_LED LED=lcd RED=0 GREEN=0 BLUE=1 INDEX=1 TRANSMIT=0
        SET_LED LED=lcd RED=0 GREEN=0 BLUE=1 INDEX=2 TRANSMIT=0
        SET_LED LED=lcd RED=0 GREEN=1 BLUE=0 INDEX=3 

##  Set the color of the LEDs to follow the temperature of the extruder and bed
[delayed_gcode set_temeperature_leds]
initial_duration: 1
gcode:
    SET_TEMPERATURE_LED LED=lcd SENSOR=heater_bed COOL_TEMP=30 HOT_TEMP=100
    SET_TEMPERATURE_LED LED=sb_leds INDEX=1 SENSOR=extruder COOL_TEMP=35 [HOT_TEMP=150

[bed_mesh]
mesh_min: 30,30
mesh_max: 320,320
horizontal_move_z: 5
speed: 500
probe_count: 7,7
relative_reference_index: 24
##FOLLOW THE FORUMULA FOR relative_reference_index, for example:
##[(7x7)-1] / 2 = 24
##[(5x5)-1] / 2 = 12
algorithm: bicubic
fade_start: 0.26
fade_end: 2
split_delta_z: 0.01

[filament_motion_sensor filament_sensor]
detection_length: 10
extruder: extruder
switch_pin: ^PG12    #was !PG12
pause_on_runout: True
event_delay: 3.0
pause_delay: 0.5
insert_gcode:
    M117 Insert Detected
runout_gcode:
    M117 Runout Detected
	LCDRGB R=1 G=1 B=0	# Turn LCD yellow
    SET_LOGO_LEDS_BY_NAME COLOR="YELLOW"  # Turn logo LEDs yellow
	BEEP I=12

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 37.711
#*# pid_ki = 1.420
#*# pid_kd = 250.306
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 22.202
#*# pid_ki = 1.947
#*# pid_kd = 63.276
#*#
#*# [stepper_z]
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.025000, 0.080000, 0.072500, 0.062500, 0.015000, -0.000000
#*# 	  0.022500, 0.047500, 0.085000, 0.052500, 0.022500, -0.020000
#*# 	  0.027500, 0.065000, 0.092500, 0.110000, 0.030000, -0.012500
#*# 	  0.020000, 0.042500, 0.047500, 0.032500, 0.037500, 0.000000
#*# 	  0.017500, 0.037500, 0.065000, 0.032500, 0.037500, -0.025000
#*# 	  0.030000, 0.055000, 0.087500, 0.080000, 0.040000, 0.005000
#*# tension = 0.2
#*# min_x = 69.7
#*# algo = lagrange
#*# y_count = 6
#*# mesh_y_pps = 2
#*# min_y = 70.38
#*# x_count = 6
#*# max_y = 287.18
#*# mesh_x_pps = 2
#*# max_x = 289.7
#*#
#*# [input_shaper]
#*# shaper_type_x = zv
#*# shaper_freq_x = 55.8
#*# shaper_type_y = zv
#*# shaper_freq_y = 39.6
#*#
#*# [probe]
#*# z_offset = -0.800
