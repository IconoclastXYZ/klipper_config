######################### PRINT START / END #########################

[gcode_macro PRINT_START]
# For setting the parameters as persistent variables so they can be referenced in PRINT_START2
variable_bedtemp: 0
variable_hotendtemp: 0
variable_chambertemp: 0
gcode:		
	# Parameters
	{% set bed = params.BED|int %}
	{% set hotend = params.HOTEND|int %}
	{% set chamber = params.CHAMBER|default(0)|int %}

    # An alternative way to work out chamber temperature from PrusaSlicer, which does not pass CHAMBER
    {% set filament = params.FILAMENT|default("NONE")|string %}   
    { action_respond_info("Filament type - " + filament) }
    {% if filament != 'NONE' %}                                                         
        {% set fct = {'ASA': 50, 'ABS': 50, 'NYLON': 0, 'PLA': 0, 'PC': 50, 'PET': 45 } %}
        {% set chamber = fct[filament] %}
        { action_respond_info("Filament chamber temp - " + chamber|string) }
    {% endif %}

	# Set the parameters as persistent variables so they can be referenced outside of the macro (in PRINT_END)
	SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=bedtemp VALUE={bed}	
	SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=hotendtemp VALUE={hotend}	
	SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=chambertemp VALUE={chamber}	

   	UPDATE_DELAYED_GCODE ID=EXHAUST_OFF DURATION=0  									  ; cancel exhaust off timer (if there is one)
	UPDATE_DELAYED_GCODE ID=DELAYED_OFF DURATION=0      								  ; cancel off timer (if there is one)
	SET_PIN PIN=caselight VALUE=0.67													  ; turn on case light
	_RESETSPEEDS																		  ; reset speed, accel etc to configured values
	SET_NOZZLE_LEDS_BY_NAME COLOR="WHITE"                                                ; turn on nozzle LEDs
    SET_LOGO_LEDS_BY_NAME COLOR="WHITE"                                                  ; set logo LEDs back to white
    SET_Z_THERMAL_ADJUST ENABLE=1
    M104 S{150}																			  ; set hotend to no-ooze temp allowed for TAP bed probe
	M140 S{bed}																			  ; set bed to target temp
	G28																					  ; home
    CLEANNOZZLE
    G28
    G90																					  ; absolute positioning

    {% if chamber > 35 %}                                                                ; if the chamber desired temp is over baseline (35) then setup exhaust fan to keep it under control
        SET_TEMPERATURE_FAN_TARGET temperature_fan=Exhaust target={chamber+1}           ; plus 1 to temp to offset hysteresis
        SET_HEATER_TEMPERATURE HEATER=chamber_heater TARGET={chamber}                   ; set the chamber heater to work above 35C target
    {% else %}
        SET_TEMPERATURE_FAN_TARGET temperature_fan=Exhaust target=35
    {% endif %}

	{% if printer["temperature_sensor chamber"].temperature < chamber and chamber > 35 %}				; - if chamber is not at temp yet:
		HEATSOAK T={bed} MOVE=1																			; 	heatsoak macro + park in center
		M190 S{bed} 																					; 	set bed chamber heating temp
        { action_respond_info("Waiting for chamber to reach temperature") }
        TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={chamber}							; 	wait for chamber final temp
        { action_respond_info("Waiting for bed to reach set temp") }
        M190 S{bed}                                                                                    ; waits for bed to return to desired temp
    {% else %}																							; - if chamber is already at temp:
    	{% if printer.heater_bed.temperature < (bed-2) %}												; -- but bed is not fully heated (within 2C):
    		HEATSOAK T={bed} MOVE=1																		; 		heatsoak and park
    		M190 S{bed} 																				; 		wait for bed final temp
    	{% else %}																						; -- and bed is already heated:
    		HEATSOAK T={bed} MOVE=0																		; 		"heatsoak" without parking (only still calling this because it does some other things like turn off exahaust fan)
    	{% endif %}
	{% endif %}	

    { action_respond_info('Waiting for bed undersurface to reach %.1fC' % (bed*0.80)) }
    TEMPERATURE_WAIT SENSOR="temperature_sensor Bed_Rear_Bottom" MINIMUM={bed*0.80}                   ; wait for the outside of the bed to be within 15% of the center under the heating pad

    SET_LOGO_LEDS_BY_NAME COLOR="WHITE"                                                  ; set logo LEDs back to white
	M106 S0																								; turn off part cooling fan (from heatsoak)
    BED_MESH_CLEAR																						; clear bed mesh
    { action_respond_info("Performing QGL and BedMesh") }
	QUAD_GANTRY_LEVEL																					; quad gantry level
	G28 Z																								; home z
	BED_MESH_CALIBRATE																					; mesh
	G28 Z																								; home z again
   
    G0 X55 Y350 F19500  ; go to purge bucket whilst warming up to temp
    M109 S{hotend} 																						; set & wait for hotend final temp
    #BUCKET_PURGE
    ADAPTIVE_PURGE
  
	G92 E0                              																; reset Extruder
    G1 Z10 F3000                       																; move Z Axis up
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1												; enable filament sensor

    M117  # Blank message - hopefully

[gcode_macro PRINT_END]
gcode:
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0													; disable filament sensor
	CLEAR_PAUSE																							; clear pause (from M191) if there is one
    SET_HEATER_TEMPERATURE HEATER=chamber_heater TARGET=0
    {% if printer.heater_bed.temperature >= 90 %}												
		SET_TEMPERATURE_FAN_TARGET temperature_fan=Exhaust target=50                                   ; initial cool of the chamber		; crank exhaust fan to 100% to evacuate chamber
    	BedFansFast
    {% endif %}													
    SET_Z_THERMAL_ADJUST ENABLE=0
	M400                         	   																	; wait for buffer to clear
	G92 E0                        	    																; zero the extruder
    G1 E-10.0 F3600                                                                                    ; retract filament
	M104 S0						 	    			 													; turn only the hotend off
	M140 S{printer["gcode_macro PRINT_START"].bedtemp|int}												; return the bed to temp, some slicers like to turn it off
    M107                         	   			 	 													; turn off part cooling fan
	G91                             							 										; relative positioning
    G1 Z5 F3000                  	    			 													; move nozzle up 5mm
    G90                           	    			 													; absolute positioning
	PARKREAR                                                                                           ; park high at the back to keep away from hot bed after hotend fan has stopped
    BED_MESH_CLEAR																						; clear bed mesh		
	UPDATE_DELAYED_GCODE ID=EXHAUST_OFF DURATION=120													; turn exhaust off in 2 min
    UPDATE_DELAYED_GCODE ID=DELAYED_OFF DURATION=1800	 												; turn everything off in 30 min
  	SET_TEMPERATURE_FAN_TARGET temperature_fan=Exhaust target=30                                       ; further cool the chamber
    {% if printer.heater_bed.temperature >= 75 %}												
		SET_TEMPERATURE_FAN_TARGET temperature_fan=Exhaust target=30                                   ; final cool of the chamber	; crank exhaust fan to 100% to evacuate chamber
    	BedFansSlow
    {% endif %}													
    _RESETSPEEDS																						; reset speed, accel etc to configured max values
    SET_NOZZLE_LEDS_BY_NAME COLOR="OFF"                                                                ; turn off nozzle LEDs
	#BEEP I=3																							; beep 3 times
